# https://github.com/mainsail-crew/mainsail-config
#
# Client variable macro from mainsail.cfg
[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 5.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 176.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 5.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 2.0   ; the value to retract while PAUSE
variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 35.0  ; retract speed in mm/s
#variable_unretract        : 1.0   ; the value to unretract while RESUME
#variable_speed_unretract  : 35.0  ; unretract speed in mm/s
variable_speed_hop        : 15.0  ; z move speed in mm/s
variable_speed_move       : 100.0 ; move speed in mm/s
#variable_park_at_cancel   : False ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
#variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
#variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
variable_idle_timeout      : 86400 ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
variable_runout_sensor    : "filament_switch_sensor e0_sensor"    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
##                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
## !!! Custom macros, please use with care and review the section of the corresponding macro.
## These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
## Only  single line commands are supported, please create a macro if you need more than one command.
#variable_user_pause_macro : ""    ; Everything inside the "" will be executed after the klipper base pause (PAUSE_BASE) function
#variable_user_resume_macro: ""    ; Everything inside the "" will be executed before the klipper base resume (RESUME_BASE) function
#variable_user_cancel_macro: ""    ; Everything inside the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
gcode:

[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_macro PRINT_START]
description: "Start Print Macro"
gcode:
    # Set total layer count for tracking
    SET_PRINT_STATS_INFO TOTAL_LAYER={params.TOTAL_LAYER|default(0)}

    # Set movement and extrusion modes
    G90  ; use absolute positioning
    M83  ; extruder relative mode

    # Preheat to prevent oozing
    M104 S150  ; set temporary nozzle temp
    M140 S{params.BED_TEMP|default(60)}  ; set bed temp
    G4 S30  ; wait for partial warmup

    # Home all axes and restore leveling
    G28

    # Bed mesh calibration
    BED_MESH_CALIBRATE ADAPTIVE=1 ADAPTIVE_MARGIN=0

    # Move nozzle up for safe travel
    G1 Z50 F240
    G1 X2.0 Y10 F3000

    # Set final temperatures
    M104 S{params.NOZZLE_TEMP|default(210)}
    M190 S{params.BED_TEMP|default(60)}  ; wait for bed temp
    M109 S{params.NOZZLE_TEMP|default(210)}  ; wait for nozzle temp

    # Prime the nozzle
    G1 Z0.28 F240
    G92 E0
    G1 X2.0 Y140 E10 F1500
    G1 X2.3 Y140 F5000
    G92 E0
    G1 X2.3 Y10 E10 F1200
    G92 E0

[gcode_macro PRINT_END]
description: "Macro to move print head up, turn off heat, fan, and motors"

gcode:
    {% set printable_height = printer.toolhead.axis_maximum.z %}
    {% set z_offset = printer.toolhead.position.z %}
    {% set print_bed_max_y = printer.toolhead.axis_maximum.y %}
    {% set travel_speed = 150 * 60 %}  # Speed is set to 150 mm/s converted to mm/min

    {% set max_layer_z = (params.MAX_LAYER_Z|default(0))|int %}

    # Ensure max_layer_z does not exceed printable_height
    {% set max_layer_z = max_layer_z if max_layer_z < printable_height else printable_height %}

    # Calculate the next safe Z height (min of max_layer_z + 2 or printable_height)
    {% set safe_z = max_layer_z + 2 if max_layer_z + 2 < printable_height else printable_height %}
    
    # Move to the first safe height
    G1 Z{safe_z} F600

    # Move to the final position on the bed
    G1 X5 Y{print_bed_max_y * 0.8} F{travel_speed}

    # Calculate a higher safe Z move
    {% set safe_z = max_layer_z + 70 if max_layer_z + 70 < printable_height - 10 else printable_height - 10 %}
    
    # Move higher if needed, ensuring it does not exceed limits
    {% if max_layer_z < printable_height - 10 %}
        G1 Z{safe_z} F600
    {% endif %}

    # Move to 60% of printable height if needed
    {% set target_z = printable_height * 0.6 %}
    {% if max_layer_z < target_z %}
        G1 Z{target_z} F600
    {% endif %}

    # Turn off heat and motors
    M140 S0  ; Turn off heatbed
    M104 S0  ; Turn off hotend
    M107     ; Turn off fan
    M84 X Y E  ; Disable motors to prevent further movement
    

[gcode_macro SET_LAYER_INFO]
description: "Sets the current layer information with a default value"

gcode:
    # Use the passed layer_num or default to 0 if not provided, convert to integer
    {% set layer_num = (params.LAYER_NUM|default(0))|int %}
    SET_PRINT_STATS_INFO CURRENT_LAYER={layer_num + 1}
    M118 "Current layer is {layer_num + 1}"


[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh -c \"$0\""
timeout: 90.0
verbose: True
